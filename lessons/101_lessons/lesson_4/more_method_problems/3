ages = { "Herman" => 32, "Lily" => 30, "Grandpa" => 402, "Eddie" => 10 }

1. Using a loop
counter = 0
young_people = {}
people = ages.keys

loop do
  current_person = people[counter]
  age = ages[current_person]
  young_people[current_person] = age if age < 100
  counter += 1
  break if counter == people.size
end
young_people => {"Herman"=>32, "Lily"=>30, "Eddie"=>10}

2. Using #select
ages.select do |_, age|
  age < 100
end

3. Using #each_with_object
ages.each_with_object({}) do |pair, hash|
  hash[pair.first] = pair.last if pair.last < 100
end

4. Using #each_with_index
Note: This is definitely identical to using each, I'm showing it here to get practice for using _ with unused arguments.
young_people = {}

ages.each_with_index do |pair, _|
  young_people[pair.first] = pair.last if pair.last < 100
end

5. Using #each
young_people = {}

ages.each do |person, age|
  young_people[person] = age if age < 100
end

Note in these examples, the ages hash is not mutated. 
